#!/usr/bin/env Rscript

library(ballgown)
library(dplyr)
library(genefilter)

pheno_data <- read.csv(file="./pheno.txt", stringsAsFactors=F)
bg <- ballgown(dataDir="./", pData=pheno_data, samplePattern="sample", meas='FPKM')

# have changed rowVars(gexpr) to rowVars(texpr); got erroneous FC values otherwise.
bg_varfilt <- subset(bg, "rowVars(texpr(bg)) > 1", genomesubset=T)

#Stat test on Genes
gene_results_varfilt <- stattest(bg_varfilt, feature="gene", 
	covariate="sample", getFC=T, meas="FPKM")

# Add symbols. Use the pairing of transcripts, genes, and symbols, in output of texpr(,'all').
indices <- match(gene_results_varfilt$id,  texpr(bg, 'all')$gene_id)
gene_names_for_result <- texpr(bg, 'all')$gene_name[indices]
gene_results_varfilt  <- data.frame(geneNames=gene_names_for_result, gene_results_varfilt)
gene_results_varfilt  <- gene_results_varfilt[!is.na(gene_results_varfilt$qval),]
gene_results_varfilt  <- arrange(gene_results_varfilt, qval)
write.table(gene_results_varfilt, sep="\t", row.names=F, col.names=T, quote=F, file="gene_de.txt")

# Add FPKMs for each entry
gene_expr <- as.data.frame(gexpr(bg_varfilt))
gene_expr.matrix <- as.matrix(gene_expr)
gene_expr$id <- rownames(gene_expr)
gene_joined  <- right_join(gene_results_varfilt, gene_expr)
lg_fc <- log(gene_joined$fc,2)
gene_joined  <- cbind(gene_joined,lg_fc)
gene_joined  <- gene_joined[!is.na(gene_joined$qval),]
write.table(gene_joined, quote=F, sep="\t", row.names=F, col.names=T, file="de_gene_data.txt")

# Stat test on Transcripts
transcript_results_varfilt <- stattest(bg_varfilt, feature="transcript", covariate="sample", meas="FPKM", getFC=T)
transcript_results_varfilt <- data.frame(geneName=ballgown::geneNames(bg_varfilt), 
	geneID=ballgown::geneIDs(bg_varfilt), 
	transcriptName=ballgown::transcriptNames(bg_varfilt), transcript_results_varfilt)
transcript_results_varfilt <- arrange(transcript_results_varfilt, qval)
transcript_results_varfilt <- transcript_results_varfilt[!is.na(transcript_results_varfilt$qval),]
write.table(transcript_results_varfilt, sep="\t", row.names=F, col.names=T, quote=F, file="transcript_de.txt")

# Add FPKMs for each entry
trans_expr <- as.data.frame(texpr(bg_varfilt))
trans_expr.matrix <- as.matrix(trans_expr)
trans_expr$id <- rownames(trans_expr)
#trans_expr$FPKM1  <- rowMeans(trans_expr.matrix[,pheno_data$sample == 'control'])
#trans_expr$FPKM2  <- rowMeans(trans_expr.matrix[,pheno_data$sample == 'experimental'])
#trans_expr$log2FC <- log2(trans_expr$FPKM2/trans_expr$FPKM1)
joined <- left_join(transcript_results_varfilt, trans_expr)
lg_fc  <- log(joined$fc,2)
joined <- cbind(joined,lg_fc)

# Write out table of transcript results with FPKMs.
write.table(joined, quote=F, sep="\t", row.names=F, col.names=T, file="de_transcript_data.txt")

save.image(file="RData")
